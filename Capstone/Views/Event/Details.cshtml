@using System.Security.Claims
@model Capstone.Models.Event

@{
    ViewBag.Title = "Event Details";
    // Retrieve the currently logged-in user's UserId
    var currentUserIdString = User.FindFirstValue(ClaimTypes.NameIdentifier);
    int.TryParse(currentUserIdString, out int currentUserId);

    bool isEventOver = DateTime.Now > Model.DateTo;
    bool userHasPostedReview = ViewBag.Reviews != null && ((IEnumerable<Capstone.Models.Review>)ViewBag.Reviews).Any(r => r.UserId == currentUserId);

    var totalTickets = Model.EventTicketType.Sum(ett => ett.AvailableQuantity);
}
<head>
    <link rel="stylesheet" href="/css/event_details.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<h2>Event Details</h2>

<div>
    <h4>@Model.Name</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">Description</dt>
        <dd class="col-sm-10">@Model.Description</dd>

        <dt class="col-sm-2">Date From</dt>
        <dd class="col-sm-10">@Model.DateFrom.ToString("yyyy-MM-dd")</dd>

        <dt class="col-sm-2">Date To</dt>
        <dd class="col-sm-10">@Model.DateTo.ToString("yyyy-MM-dd")</dd>

        <dt class="col-sm-2">Host Name</dt>
        <dd class="col-sm-10">@Model.HostName</dd>

        <h3>Location</h3>
        <dd class="col-sm-10">@Model.Location?.LocationName</dd>
        <dd class="col-sm-10">@Model.Location?.AddressGoogleApi</dd>

        <div class="row">
            <!-- Google Maps Iframe -->
            <div class="col-md-6">
                <div id="map" style="height: 300px; width: 100%;"></div>
            </div>
        </div>

        <dt class="col-sm-2">DJs</dt>
        <dd class="col-sm-10">
            @if (Model.Djs != null && Model.Djs.Count > 0)
            {
                <ul>
                    @foreach (var dj in Model.Djs)
                    {
                        <li>
                            <a href="@Url.Action("Detail", "DJ", new { id = dj.DjId })">@dj.ArtistName</a>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No DJs associated with this event.</p>
            }
        </dd>
        <dt class="col-sm-2">Genres</dt>
        <dd class="col-sm-10">
            @if (Model.Genres != null )
            {
                <ul>
                    @foreach (var genre in Model.Genres)
                    {
                        <li>
                            <p>@genre.Name</p>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No DJs associated with this event.</p>
            }
        </dd>

        <dt class="col-sm-2">Images</dt>
        <dd class="col-sm-10">
            @if (Model.EventImgs != null && Model.EventImgs.Count > 0)
            {
                foreach (var img in Model.EventImgs)
                {
                    <div class="event-image">
                        <img src="@img.FilePath" alt="Event image" class="img-fluid" />
                    </div>
                }
            }
            else
            {
                <p>No images available for this event.</p>
            }
        </dd>

    </dl>
</div>
<div class="mt-3">
    <a class="btn btn-primary" href="@Url.Action("Edit", "Event", new { id = Model.EventId })">Edit event</a>
    <a class="btn btn-danger" href="@Url.Action("Delete", "Event", new { id = Model.EventId })">Delete event</a>
    <a class="btn btn-secondary" href="@Url.Action("List", "Event")">Back to List</a>
</div>
<div class="mt-5 mb-5">
    <h3>Buy Tickets</h3>
    <p>Biglietti disponibili: @totalTickets</p>
    <form asp-action="AddToCart" asp-controller="Cart" method="post">
        <input type="hidden" name="eventId" value="@Model.EventId" />
        <div class="form-group">
            <label for="ticketTypeId">Ticket Type</label>
            <select id="ticketTypeId" name="ticketTypeId" class="form-control" required>
                @foreach (var eventTicketType in Model.EventTicketType)
                {
                    var isSoldOut = eventTicketType.AvailableQuantity == 0;
                    var optionText = $"{eventTicketType.TicketType.TicketTypeName} - {eventTicketType.TicketType.Price.ToString("C")} - {eventTicketType.TicketType.TicketTypeDescription} - {(isSoldOut ? "Sold Out" : $"Available: {eventTicketType.AvailableQuantity}")}";
                    var optionValue = eventTicketType.TicketType.TicketTypeId.ToString();
                    var optionAttributes = isSoldOut ? new { disabled = "disabled" } : null;

                    if (isSoldOut)
                    {
                        <option value="@optionValue" disabled>@optionText</option>
                    }
                    else
                    {
                        <option value="@optionValue">@optionText</option>
                    }
                }
            </select>
        </div>
        <div class="form-group">
            <label for="quantity">Quantity</label>
            <input id="quantity" type="number" name="quantity" class="form-control" value="1" min="1" required />
        </div>
        <button type="submit" class="btn btn-primary mt-2">Add to Cart</button>
    </form>
</div>

<div class="mt-5 mb-5">
    <h3>Comments</h3>
    <ul class="comment-list">
        @if (Model.Comments != null && Model.Comments.Count > 0)
        {
            @foreach (var comment in Model.Comments)
            {
                <li class="@(comment.ParentCommentId != null ? "reply-comment mb-4" : "main-comment mb-4") border p-3 rounded">

                    <!-- Parent Comment Preview for Replies -->
                    @if (comment.ParentCommentId != null)
                    {
                        <div class="parent-comment-preview mb-2">
                            <strong>In reply to @comment.ParentComment.User.Username:</strong>
                            <span class="small text-muted">"@comment.ParentComment.Description"</span>
                        </div>
                    }
                    
                    <!-- Comment Content -->
                    <div class="comment-content">
                        <strong>@comment.User.Username</strong>
                        <p>@comment.Description</p>

                        <!-- Attached GIF -->
                        @if (!string.IsNullOrEmpty(comment.GifUrl))
                        {
                            <div class="attached-gif mb-2">
                                <img src="@comment.GifUrl" alt="Comment GIF" class="img-fluid" style="max-width:200px; height:auto;" />
                            </div>
                        }
                        
                        <span class="text-muted small">Date: @comment.PublishedAt.ToShortDateString()</span>

                        <!-- Like & Reply Buttons -->
                        <div class="action-buttons d-flex justify-content-end align-items-center mt-2">
                            <button class="btn btn-primary like-button me-2" data-comment-id="@comment.CommentId">
                                <span class="like-count me-1" data-comment-id="@comment.CommentId"></span>
                                <i class="fa-solid fa-thumbs-up"></i>
                            </button>
                            <span class="me-2 text-muted small">Liked by:</span>
                            <ul data-comment-id="@comment.CommentId">
                                @foreach (var like in comment.CommentLikes)
                                {
                                    <li class="small text-danger">@like.User.Username</li>
                                }
                            </ul>

                            <button class="btn btn-success reply-button" data-comment-id="@comment.CommentId">
                                <i class="fa-solid fa-reply"></i> Reply
                            </button>
                        </div>
                    </div>

                    <!-- Reply Form (Hidden by default) -->
                    <div class="reply-form mt-3" id="replyForm-@comment.CommentId" style="display:none;">
                        <h5>Reply to @comment.User.Username</h5>
                        <form asp-action="Reply" asp-controller="Comment" method="post">
                            <div class="form-group">
                                <textarea name="Description" class="form-control" placeholder="Write your reply" required></textarea>
                            </div>
                            <input type="hidden" name="ParentCommentId" value="@comment.CommentId" />
                            <input type="hidden" name="EventId" value="@Model.EventId" />
                            <button type="submit" class="btn btn-primary mt-2">Submit</button>
                            <button type="button" class="btn btn-secondary mt-2 cancel-reply" data-comment-id="@comment.CommentId">Cancel</button>
                        </form>
                    </div>

                    <hr />
                </li>
            }
        }
        else
        {
            <p>No comments yet.</p>
        }
    </ul>

    <!-- Comment Form -->
    <h4>Add a Comment</h4>
    <form asp-action="Create" asp-controller="Comment" method="post">
        <div class="form-group">
            <textarea id="Description" name="Description" class="form-control" placeholder="Write a comment..." required></textarea>
        </div>
        <div id="gifSection" style="display:none;">
            <div class="form-group">
                <input type="text" id="gifSearch" class="form-control" placeholder="Search GIF...">
            </div>
            <div id="gifResults" class="d-flex flex-wrap mt-3"></div>
            <div id="selectedGifContainer" style="display:none;">
                <h5>Selected GIF:</h5>
                <img id="selectedGif" src="" alt="Selected GIF" class="img-fluid" style="max-width:100px; height:auto;">
                <input type="hidden" name="GifUrl" id="hiddenGifUrl" />
            </div>
        </div>
        <input type="hidden" name="EventId" value="@Model.EventId" />
        <div class="mt-2">
            <button type="submit" class="btn btn-primary">Submit</button>
            <button id="addGifSectionBtn" type="button" class="btn btn-secondary">Add GIF</button>
        </div>
    </form>
</div>
<hr />


<h3>Reviews</h3>
@foreach (var review in ViewBag.Reviews as IEnumerable<Capstone.Models.Review>)
{
    var isCurrentUserReview = review.UserId == currentUserId;

    <div id="review-content-@review.ReviewId">
        <strong>@review.User.Username</strong> - <span id="review-rating-@review.ReviewId">@review.Rating</span>/5
        <h4 id="review-title-@review.ReviewId">@review.Title</h4>
        <p id="review-description-@review.ReviewId">@review.Description</p>

        @if (review.ReviewImgs.Any())
        {
            <div>
                <h5>Images:</h5>
                @foreach (var img in review.ReviewImgs)
                {
                    <img src="@img.FilePath" alt="Review Image" style="width:150px; margin-right: 10px;" />
                }
            </div>
        }

        @if (isCurrentUserReview)
        {
            <button type="button" class="btn btn-primary" onclick="toggleEditMode(@review.ReviewId)">Edit</button>
        }

        <form asp-action="DeleteReview" method="post" style="display:inline;">
            @Html.AntiForgeryToken()
            <input type="hidden" name="reviewId" value="@review.ReviewId" />
            <input type="hidden" name="eventId" value="@Model.EventId" />
            <button type="submit" class="btn btn-danger">Delete</button>
        </form>
    </div>

    <!-- Inline Edit Form (hidden by default) -->
    <div id="edit-review-form-@review.ReviewId" style="display:none; margin-top: 15px;">
        <form method="post" action="@Url.Action("EditReview", "Event")" onsubmit="return submitEditForm(@review.ReviewId);">
            @Html.AntiForgeryToken()
            <input type="hidden" name="EventId" value="@Model.EventId" />
            <input type="hidden" name="ReviewId" value="@review.ReviewId" />

            <div class="form-group">
                <label for="Title">Title</label>
                <input type="text" id="Title-@review.ReviewId" name="Title" class="form-control" value="@review.Title" required />
            </div>

            <div class="form-group">
                <label for="Description">Description</label>
                <textarea id="Description-@review.ReviewId" name="Description" class="form-control" required>@review.Description</textarea>
            </div>

            <div class="form-group">
                <label for="Rating">Rating</label>
                <input type="number" id="Rating-@review.ReviewId" name="Rating" class="form-control" min="1" max="5" value="@review.Rating" required />
            </div>
            @if (review.ReviewImgs.Any())
            {
                <div>
                    <h5>Current Uploaded Images:</h5>
                    @foreach (var img in review.ReviewImgs)
                    {
                        <img src="@img.FilePath" alt="Review Image" style="width:100px; margin-right: 10px;" />
                    }
                </div>
            }
            <div class="form-group">
                <label for="imageFiles">Upload New Images</label>
                <input type="file" id="imageFiles-@review.ReviewId" name="imageFiles" multiple class="form-control" />
            </div>

            <button type="submit" class="btn btn-success">Save</button>
            <button type="button" class="btn btn-secondary" onclick="toggleEditMode(@review.ReviewId)">Cancel</button>
        </form>
    </div>

    <hr />
}

@if (isEventOver && !userHasPostedReview)
{
    <h4>Add a Review</h4>
    <form asp-action="CreateReview" asp-controller="Event" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <input type="hidden" name="EventId" value="@Model.EventId" />

        <div class="form-group">
            <label for="Title">Title</label>
            <input type="text" id="Title" name="Title" class="form-control" required />
        </div>

        <div class="form-group">
            <label for="Description">Description</label>
            <textarea id="Description" name="Description" class="form-control" required></textarea>
        </div>

        <div class="form-group">
            <label for="Rating">Rating</label>
            <input type="number" id="Rating" name="Rating" class="form-control" min="1" max="5" required />
        </div>

        <div class="form-group">
            <label for="imageFiles">Upload Images</label>
            <input type="file" name="imageFiles" multiple class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Submit Review</button>
        </form>
  
    
}
else if (userHasPostedReview)
{
    <p><strong>You have already reviewed this event.</strong></p>
}
else
{
    <p>You can post a review after the event is over.</p>
}


@section Scripts {
    <script>
        var giphyApiKey = '@ViewBag.GiphyApiKey';
        var toggleLikeUrl = '@Url.Action("ToggleLike", "Comment")';
        var getCommentLikesUrl = '@Url.Action("GetCommentLikes", "Comment")';
        var eventAddress = '@(Model.Location?.LocationName + " " + Model.Location?.AddressGoogleApi)';
    </script>

    <script src="~/js/event_details.js"></script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.GoogleMapsApiKey&loading=async&callback=initMap&libraries=places" ></script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
