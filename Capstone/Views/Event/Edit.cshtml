@model Capstone.Models.Event

@{
    ViewBag.Title = "Edit Event";
    var djs = ViewBag.DJs as List<Dj>;
    var locations = ViewBag.Locations as List<Location>;
    var ticketTypes = ViewBag.TicketTypes as List<TicketType>;
}

<h2>Edit Event</h2>

<form action="/Event/Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <input type="hidden" name="EventId" value="@Model.EventId" />

    <div class="form-group">
        <label for="Name">Event Name</label>
        <input type="text" id="Name" name="Name" class="form-control" placeholder="Enter event name" value="@Model?.Name" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="Description">Event Description</label>
        <textarea id="Description" name="Description" class="form-control" placeholder="Enter event description">@Model?.Description</textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="DateFrom">Start Date</label>
        <input type="date" id="DateFrom" name="DateFrom" class="form-control" value="@Model?.DateFrom.ToString("yyyy-MM-dd")" />
        <span asp-validation-for="DateFrom" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="DateTo">End Date</label>
        <input type="date" id="DateTo" name="DateTo" class="form-control" value="@Model?.DateTo.ToString("yyyy-MM-dd")" />
        <span asp-validation-for="DateTo" class="text-danger"></span>
    </div>


    <div class="form-group">
        <label for="HostName">Host Name</label>
        <input type="text" id="HostName" name="HostName" class="form-control" placeholder="Enter host name" value="@Model?.HostName" />
        <span asp-validation-for="HostName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="LocationId">Location</label>
        <select id="LocationId" name="LocationId" class="form-control">
            <option value="">Select Location</option>
            @foreach (var l in locations)
            {
                if (l.LocationId == Model?.LocationId)
                {
                    <option value="@l.LocationId" selected="selected">@l.LocationName</option>
                }
                else
                {
                    <option value="@l.LocationId">@l.LocationName</option>
                }
            }
        </select>
        <span asp-validation-for="LocationId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="djIds">Select DJs</label>
        <select id="djIds" name="djIds" multiple class="form-control">
            @foreach (var dj in djs)
            {
                bool isSelected = Model.Djs.Any(d => d.DjId == dj.DjId);
                if (isSelected)
                {
                    <option value="@dj.DjId" selected="selected">@dj.ArtistName </option>
                }
                else
                {
                    <option value="@dj.DjId">@dj.ArtistName </option>
                }
            }
        </select>
    </div>

    <div class="form-group">
        <label for="ticketTypesIds">Select Ticket Types:</label>
        <select id="ticketTypesIds" name="ticketTypesIds" multiple class="form-control">
            @foreach (var t in ticketTypes)
            {
                bool isSelected = Model.TicketTypes.Any(t => t.TicketTypeId == t.TicketTypeId);
                if (isSelected)
                {
                    <option value="@t.TicketTypeId" selected="selected">@t.TicketTypeName - @t.TicketTypeDescription</option>
                }
                else
                {
                    <option value="@t.TicketTypeId">@t.TicketTypeName - @t.TicketTypeDescription</option>
                }
            }
        </select>
    </div>

    <div class="form-group">
        <label for="additionalImageFiles">Add Additional Images (these will be added to the existing images)</label>
        <input type="file" id="additionalImageFiles" name="additionalImageFiles" class="form-control" multiple />
    </div>
    <div class="form-group">
        <label for="imageFiles">Upload New Images (existing images will be replaced if new images are uploaded)</label>
        <input type="file" id="imageFiles" name="imageFiles" class="form-control" multiple />
    </div>

    <button type="submit" class="btn btn-primary">Save Changes</button>
    <a href="@Url.Action("List", "Event")" class="btn btn-secondary">Back to List</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
